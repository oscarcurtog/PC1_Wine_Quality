name: Release Notes Publish

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

concurrency:
  group: release-notes-publish-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  publish:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/release-notes publish') }}
    runs-on: ubuntu-latest

    # ðŸ‘‡ Carga los secrets de AWS y Bedrock para que el agente pueda regenerar si hace falta
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}   # dÃ©jalo si tus credenciales son temporales
      BEDROCK_MODEL_ID: ${{ secrets.BEDROCK_MODEL_ID }}

    steps:
      - name: Checkout PR repo (this repo)
        uses: actions/checkout@v4

      - name: Checkout agent repo
        uses: actions/checkout@v4
        with:
          repository: oscarcurtog/release-note-agent
          ref: main
          path: agent
          # token: ${{ secrets.AGENT_REPO_TOKEN }}  # solo si el agente es privado

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Restore cache (agent/.cache)
        uses: actions/cache@v4
        with:
          path: agent/.cache/release_notes
          key: release-notes-${{ github.event.issue.number }}-${{ github.sha }}
          restore-keys: |
            release-notes-${{ github.event.issue.number }}-

      - name: Install deps from agent repo
        run: |
          python -m pip install --upgrade pip
          pip install -r agent/requirements.txt

      - name: Handle publish command
        env:
          # GITHUB_TOKEN solo donde hace falta (para leer/escribir comentarios)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: agent
        run: |
          python -m agents.release_notes_agent handle-comment \
            --owner "${{ github.repository_owner }}" \
            --repo  "${{ github.event.repository.name }}" \
            --pr    ${{ github.event.issue.number }} \
            --comment-id ${{ github.event.comment.id }}
